{"version":3,"sources":["webpack:///./src/index.tsx"],"names":["iconImg","require","default","process","title","Renderer","render","module","hot","accept","forceUpdate","systemTrayIcon","win","icon","QIcon","path","resolve","__dirname","tray","QSystemTrayIcon","setIcon","show","menu","QMenu","setContextMenu","visibleAction","QAction","addAction","setText","addEventListener","isVisible","hide","global"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AACA,MAAMA,OAAO,GAAGC,mBAAO,CAAC,6CAAD,CAAP,CAA8BC,OAA9C;;AAEAC,OAAO,CAACC,KAAR,GAAgB,gBAAhB;AACAC,+DAAQ,CAACC,MAAT,eAAgB,2DAAC,4CAAD,OAAhB,E,CAEA;;AACA,IAAIC,IAAJ,EAAgB;AACZA,QAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,CAAC,4BAAD,CAAlB,EAA6B;AAAA,aAAY;AACrCJ,mEAAQ,CAACK,WAAT;AACH,GAFD;AAGH;;AAED,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,QAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAUC,IAAI,CAACC,OAAL,CAAaC,SAAb,EAAwBjB,OAAxB,CAAV,CAAb;AACA,QAAMkB,IAAI,GAAG,IAAIC,eAAJ,EAAb;AACAD,MAAI,CAACE,OAAL,CAAaP,IAAb;AACAK,MAAI,CAACG,IAAL,GAJyB,CAMzB;;AACA,QAAMC,IAAI,GAAG,IAAIC,KAAJ,EAAb;AACAL,MAAI,CAACM,cAAL,CAAoBF,IAApB,EARyB,CAUzB;;AACA,QAAMG,aAAa,GAAG,IAAIC,OAAJ,EAAtB;AACAJ,MAAI,CAACK,SAAL,CAAeF,aAAf;AACAA,eAAa,CAACG,OAAd,CAAsB,WAAtB;AACAH,eAAa,CAACI,gBAAd,CAA+B,WAA/B,EAA4C,MAAM;AAC9C,QAAIjB,GAAG,CAACkB,SAAJ,EAAJ,EAAqB;AACjBlB,SAAG,CAACmB,IAAJ;AACH,KAFD,MAEO;AACHnB,SAAG,CAACS,IAAJ;AACH;AACJ,GAND;AAQAW,QAAM,CAACd,IAAP,GAAcA,IAAd;AACH,C","file":"main.7da8e8ea6ac1458aa090.hot-update.js","sourcesContent":["import { Renderer } from \"@nodegui/react-nodegui\";\nimport React from \"react\";\nimport App from \"./app\";\nconst iconImg = require(\"../assets/logo.png\").default;\n\nprocess.title = \"My NodeGui App\";\nRenderer.render(<App />);\n\n// This is for hot reloading (this will be stripped off in production by webpack)\nif (module.hot) {\n    module.hot.accept([\"./app\"], function () {\n        Renderer.forceUpdate();\n    });\n}\n\nfunction systemTrayIcon(win) {\n    const icon = new QIcon(path.resolve(__dirname, iconImg));\n    const tray = new QSystemTrayIcon();\n    tray.setIcon(icon);\n    tray.show();\n\n    // Menu that should pop up when clicking on systray icon.\n    const menu = new QMenu();\n    tray.setContextMenu(menu);\n\n    //Each item in the menu is called an action\n    const visibleAction = new QAction();\n    menu.addAction(visibleAction);\n    visibleAction.setText(\"Show/Hide\");\n    visibleAction.addEventListener(\"triggered\", () => {\n        if (win.isVisible()) {\n            win.hide();\n        } else {\n            win.show();\n        }\n    });\n\n    global.tray = tray;\n}\n"],"sourceRoot":""}