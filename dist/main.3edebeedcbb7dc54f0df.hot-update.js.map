{"version":3,"sources":["webpack:///./src/index.tsx"],"names":["QIcon","QMenu","QAction","QSystemTrayIcon","require","iconImg","default","process","title","setTimeout","Renderer","render","win","QMainWindow","setWindowTitle","label","QLabel","setText","setCentralWidget","show","global","module","hot","accept","forceUpdate","systemTrayIcon","icon","path","resolve","__dirname","tray","setIcon","menu","setContextMenu","visibleAction","addAction","addEventListener","isVisible","hide"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AACA,MAAM;AAAEA,OAAF;AAASC,OAAT;AAAgBC,SAAhB;AAAyBC;AAAzB,IAA6CC,mBAAO,CAAC,uEAAD,CAA1D;;AACA,MAAMC,OAAO,GAAGD,mBAAO,CAAC,6CAAD,CAAP,CAA8BE,OAA9C;;AACAC,OAAO,CAACC,KAAR,GAAgB,YAAhB;AAEAC,UAAU,CAAC,MAAM;AACbC,iEAAQ,CAACC,MAAT,eAAgB,2DAAC,4CAAD,OAAhB;AACH,CAFS,EAEP,IAFO,CAAV;AAIA,MAAMC,GAAG,GAAG,IAAIC,4DAAJ,EAAZ;AACAD,GAAG,CAACE,cAAJ,CAAmB,aAAnB;AACA,MAAMC,KAAK,GAAG,IAAIC,uDAAJ,EAAd;AACAD,KAAK,CAACE,OAAN,CAAc,aAAd;AACAL,GAAG,CAACM,gBAAJ,CAAqBH,KAArB;AACAH,GAAG,CAACO,IAAJ;AAEAC,MAAM,CAACR,GAAP,GAAaA,GAAb,C,CAEA;;AACA,IAAIS,IAAJ,EAAgB;AACZA,QAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,CAAC,4BAAD,CAAlB,EAA6B;AAAA,aAAY;AACrCb,mEAAQ,CAACc,WAAT;AACH,GAFD;AAGH;;AAED,SAASC,cAAT,CAAwBb,GAAxB,EAA0C;AACtC,QAAMc,IAAI,GAAG,IAAI1B,KAAJ,CAAU2B,2CAAI,CAACC,OAAL,CAAaC,SAAb,EAAwBxB,OAAxB,CAAV,CAAb;AACA,QAAMyB,IAAI,GAAG,IAAI3B,eAAJ,EAAb;AACA2B,MAAI,CAACC,OAAL,CAAaL,IAAb;AACAI,MAAI,CAACX,IAAL,GAJsC,CAMtC;;AACA,QAAMa,IAAI,GAAG,IAAI/B,KAAJ,EAAb;AACA6B,MAAI,CAACG,cAAL,CAAoBD,IAApB,EARsC,CAUtC;;AACA,QAAME,aAAa,GAAG,IAAIhC,OAAJ,EAAtB;AACA8B,MAAI,CAACG,SAAL,CAAeD,aAAf;AACAA,eAAa,CAACjB,OAAd,CAAsB,WAAtB;AACAiB,eAAa,CAACE,gBAAd,CAA+B,WAA/B,EAA4C,MAAM;AAC9C,QAAIxB,GAAG,CAACyB,SAAJ,EAAJ,EAAqB;AACjBzB,SAAG,CAAC0B,IAAJ;AACH,KAFD,MAEO;AACH1B,SAAG,CAACO,IAAJ;AACH;AACJ,GAND;AAQAC,QAAM,CAACU,IAAP,GAAcA,IAAd;AACH,C","file":"main.3edebeedcbb7dc54f0df.hot-update.js","sourcesContent":["import path from \"path\";\nimport { Renderer } from \"@nodegui/react-nodegui\";\nimport React from \"react\";\nimport App from \"./app\";\nimport { QMainWindow, QLabel } from \"@nodegui/nodegui\";\nconst { QIcon, QMenu, QAction, QSystemTrayIcon } = require(\"@nodegui/nodegui\");\nconst iconImg = require(\"../assets/logo.png\").default;\nprocess.title = \"CopyPocket\";\n\nsetTimeout(() => {\n    Renderer.render(<App />);\n}, 1000);\n\nconst win = new QMainWindow();\nwin.setWindowTitle(\"Meme Search\");\nconst label = new QLabel();\nlabel.setText(\"Hello World\");\nwin.setCentralWidget(label);\nwin.show();\n\nglobal.win = win;\n\n// This is for hot reloading (this will be stripped off in production by webpack)\nif (module.hot) {\n    module.hot.accept([\"./app\"], function () {\n        Renderer.forceUpdate();\n    });\n}\n\nfunction systemTrayIcon(win: QMainWindow) {\n    const icon = new QIcon(path.resolve(__dirname, iconImg));\n    const tray = new QSystemTrayIcon();\n    tray.setIcon(icon);\n    tray.show();\n\n    // Menu that should pop up when clicking on systray icon.\n    const menu = new QMenu();\n    tray.setContextMenu(menu);\n\n    //Each item in the menu is called an action\n    const visibleAction = new QAction();\n    menu.addAction(visibleAction);\n    visibleAction.setText(\"Show/Hide\");\n    visibleAction.addEventListener(\"triggered\", () => {\n        if (win.isVisible()) {\n            win.hide();\n        } else {\n            win.show();\n        }\n    });\n\n    global.tray = tray;\n}\n"],"sourceRoot":""}