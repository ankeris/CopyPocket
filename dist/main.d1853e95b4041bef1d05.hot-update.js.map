{"version":3,"sources":["webpack:///./src/index.tsx"],"names":["process","title","Renderer","render","win","QMainWindow","setWindowTitle","label","QLabel","setText","setCentralWidget","systemTrayIcon","hide","global","module","hot","accept","forceUpdate","iconImg","require","default","icon","QIcon","path","resolve","__dirname","tray","QSystemTrayIcon","setIcon","show","menu","QMenu","setContextMenu","visibleAction","QAction","addAction","addEventListener","isVisible"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEAA,OAAO,CAACC,KAAR,GAAgB,YAAhB;AAEAC,+DAAQ,CAACC,MAAT,eAAgB,2DAAC,4CAAD,OAAhB;AAEA,MAAMC,GAAG,GAAG,IAAIC,4DAAJ,EAAZ;AACAD,GAAG,CAACE,cAAJ,CAAmB,aAAnB;AACA,MAAMC,KAAK,GAAG,IAAIC,uDAAJ,EAAd;AACAD,KAAK,CAACE,OAAN,CAAc,aAAd;AACAL,GAAG,CAACM,gBAAJ,CAAqBH,KAArB;AACAI,cAAc,CAACP,GAAD,CAAd;AACAA,GAAG,CAACQ,IAAJ;AAEAC,MAAM,CAACT,GAAP,GAAaA,GAAb,C,CAEA;;AACA,IAAIU,IAAJ,EAAgB;AACZA,QAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,CAAC,4BAAD,CAAlB,EAA6B;AAAA,aAAY;AACrCd,mEAAQ,CAACe,WAAT;AACH,GAFD;AAGH;;AAED,SAASN,cAAT,CAAwBP,GAAxB,EAA0C;AACtC,QAAMc,OAAO,GAAGC,mBAAO,CAAC,6CAAD,CAAP,CAA8BC,OAA9C;;AACA,QAAMC,IAAI,GAAG,IAAIC,sDAAJ,CAAUC,2CAAI,CAACC,OAAL,CAAaC,SAAb,EAAwBP,OAAxB,CAAV,CAAb;AACA,QAAMQ,IAAI,GAAG,IAAIC,gEAAJ,EAAb;AACAD,MAAI,CAACE,OAAL,CAAaP,IAAb;AACAK,MAAI,CAACG,IAAL,GALsC,CAOtC;;AACA,QAAMC,IAAI,GAAG,IAAIC,sDAAJ,EAAb;AACAL,MAAI,CAACM,cAAL,CAAoBF,IAApB,EATsC,CAWtC;;AACA,QAAMG,aAAa,GAAG,IAAIC,wDAAJ,EAAtB;AACAJ,MAAI,CAACK,SAAL,CAAeF,aAAf;AACAA,eAAa,CAACxB,OAAd,CAAsB,WAAtB;AACAwB,eAAa,CAACG,gBAAd,CAA+B,WAA/B,EAA4C,MAAM;AAC9C,QAAIhC,GAAG,CAACiC,SAAJ,EAAJ,EAAqB;AACjBjC,SAAG,CAACQ,IAAJ;AACH,KAFD,MAEO;AACHR,SAAG,CAACyB,IAAJ;AACH;AACJ,GAND;AAQAhB,QAAM,CAACa,IAAP,GAAcA,IAAd;AACH,C","file":"main.d1853e95b4041bef1d05.hot-update.js","sourcesContent":["import path from \"path\";\nimport { Renderer } from \"@nodegui/react-nodegui\";\nimport React from \"react\";\nimport App from \"./app\";\nimport { QMainWindow, QLabel, QSystemTrayIcon, QIcon, QMenu, QAction } from \"@nodegui/nodegui\";\n\nprocess.title = \"CopyPocket\";\n\nRenderer.render(<App />);\n\nconst win = new QMainWindow();\nwin.setWindowTitle(\"Meme Search\");\nconst label = new QLabel();\nlabel.setText(\"Hello World\");\nwin.setCentralWidget(label);\nsystemTrayIcon(win);\nwin.hide();\n\nglobal.win = win;\n\n// This is for hot reloading (this will be stripped off in production by webpack)\nif (module.hot) {\n    module.hot.accept([\"./app\"], function () {\n        Renderer.forceUpdate();\n    });\n}\n\nfunction systemTrayIcon(win: QMainWindow) {\n    const iconImg = require(\"../assets/logo.png\").default;\n    const icon = new QIcon(path.resolve(__dirname, iconImg));\n    const tray = new QSystemTrayIcon();\n    tray.setIcon(icon);\n    tray.show();\n\n    // Menu that should pop up when clicking on systray icon.\n    const menu = new QMenu();\n    tray.setContextMenu(menu);\n\n    //Each item in the menu is called an action\n    const visibleAction = new QAction();\n    menu.addAction(visibleAction);\n    visibleAction.setText(\"Show/Hide\");\n    visibleAction.addEventListener(\"triggered\", () => {\n        if (win.isVisible()) {\n            win.hide();\n        } else {\n            win.show();\n        }\n    });\n\n    global.tray = tray;\n}\n"],"sourceRoot":""}